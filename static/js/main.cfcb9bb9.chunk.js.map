{"version":3,"sources":["components/section/section.js","components/buttons/buttons.js","components/notification/notification.js","components/statistics/statistics.js","App.js","index.js","components/statistics/Statistics.module.css","components/buttons/Buttons.module.css","components/notification/Notification.module.css"],"names":["Section","title","children","Buttons","onIncrementGood","onIncrementNeutral","onIncrementBad","type","className","s","buttons","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","reviews","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Number","toFixed","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAgBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCaQC,EAhBC,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,eACtD,OACE,gCACE,wBAAQC,KAAK,SAASC,UAAWC,IAAEC,QAASC,QAASP,EAArD,kBAGA,wBAAQG,KAAK,SAASC,UAAWC,IAAEC,QAASC,QAASN,EAArD,qBAGA,wBAAQE,KAAK,SAASC,UAAWC,IAAEC,QAASC,QAASL,EAArD,qB,gBCASM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGL,UAAWC,IAAEI,QAAhB,SAA0BA,K,gBCkCpBC,EAjCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAc,IAAVD,EACK,cAAC,EAAD,CAAcL,QAAQ,sBAG7B,oCACE,oBAAGL,UAAWC,IAAEW,QAAhB,mBACQ,+BAAOL,OAEf,oBAAGP,UAAWC,IAAEW,QAAhB,sBACW,+BAAOJ,OAElB,oBAAGR,UAAWC,IAAEW,QAAhB,kBACO,+BAAOH,OAEd,oBAAGT,UAAWC,IAAEW,QAAhB,oBACS,+BAAOF,OAEhB,oBAAGV,UAAWC,IAAEW,QAAhB,gCACqB,iCAAOD,EAAP,eCpBrBE,E,4MAKJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,WAChB,EAAKmB,UAAS,SAAAC,GACZ,MAAO,CAAET,KAAMS,EAAUT,KAAO,O,EAIpCV,mBAAqB,WACnB,EAAKkB,UAAS,SAAAC,GACZ,MAAO,CAAER,QAASQ,EAAUR,QAAU,O,EAI1CV,eAAiB,WACf,EAAKiB,UAAS,SAAAC,GACZ,MAAO,CAAEP,IAAKO,EAAUP,IAAM,O,EAIlCQ,mBAAqB,WACnB,OAAO,EAAKH,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAG3DS,gCAAkC,WAChC,IAAMC,EAA6BC,QAC/B,EAAKN,MAAMP,KAAO,EAAKU,qBAAwB,KAAKI,QAAQ,IAEhE,OAAOF,EAA6B,EAAIA,EAA6B,G,uDAIrE,OACE,0BAASnB,UAAU,YAAnB,UACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,gBAAiB0B,KAAK1B,gBACtBC,mBAAoByB,KAAKzB,mBACzBC,eAAgBwB,KAAKxB,mBAGzB,cAAC,EAAD,CACES,KAAMe,KAAKR,MAAMP,KACjBC,QAASc,KAAKR,MAAMN,QACpBC,IAAKa,KAAKR,MAAML,IAChBC,MAAOY,KAAKL,qBACZN,mBAAoBW,KAAKJ,2C,GAvDjBK,aAAZV,EAGGW,aAAe,GA2DTX,QC/DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,8B,kBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.cfcb9bb9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\n\nimport s from './Buttons.module.css';\n\nconst Buttons = ({ onIncrementGood, onIncrementNeutral, onIncrementBad }) => {\n  return (\n    <div>\n      <button type=\"button\" className={s.buttons} onClick={onIncrementGood}>\n        Good\n      </button>\n      <button type=\"button\" className={s.buttons} onClick={onIncrementNeutral}>\n        Neutral\n      </button>\n      <button type=\"button\" className={s.buttons} onClick={onIncrementBad}>\n        Bad\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Notification from '../notification';\n\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  if (total === 0) {\n    return <Notification message=\"No feedback given\" />;\n  }\n  return (\n    <section>\n      <p className={s.reviews}>\n        Good: <span>{good}</span>\n      </p>\n      <p className={s.reviews}>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p className={s.reviews}>\n        Bad: <span>{bad}</span>\n      </p>\n      <p className={s.reviews}>\n        Total: <span>{total}</span>\n      </p>\n      <p className={s.reviews}>\n        Positive feedback: <span>{positivePercentage} %</span>\n      </p>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\n\nimport Section from './components/section';\nimport Buttons from './components/buttons';\nimport Statistics from './components/statistics';\n\nclass App extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onIncrementGood = () => {\n    this.setState(prevState => {\n      return { good: prevState.good + 1 };\n    });\n  };\n\n  onIncrementNeutral = () => {\n    this.setState(prevState => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n\n  onIncrementBad = () => {\n    this.setState(prevState => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage = Number(\n      ((this.state.good / this.countTotalFeedback()) * 100).toFixed(0),\n    );\n    return positiveFeedbackPercentage > 0 ? positiveFeedbackPercentage : 0;\n  };\n\n  render() {\n    return (\n      <section className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <Buttons\n            onIncrementGood={this.onIncrementGood}\n            onIncrementNeutral={this.onIncrementNeutral}\n            onIncrementBad={this.onIncrementBad}\n          />\n        </Section>\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"Statistics_reviews__QaJkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Buttons_buttons__2kyiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__9erwE\"};"],"sourceRoot":""}